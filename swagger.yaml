swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8090'
basePath: /InventoryManagement
tags:
  - name: customer-controller
    description: Customer Controller
  - name: customer-rest-controller
    description: Customer Rest Controller
  - name: inventory-rest-controller
    description: Inventory Rest Controller
  - name: orders-rest-controller
    description: Orders Rest Controller
  - name: supplier-details-rest-controller
    description: Supplier Details Rest Controller
paths:
  /allord:
    get:
      tags:
        - orders-rest-controller
      summary: allOrders
      operationId: allOrdersUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Orders'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /allsup:
    get:
      tags:
        - supplier-details-rest-controller
      summary: allSupplierDetails
      operationId: allSupplierDetailsUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SupplierDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/allcus:
    get:
      tags:
        - customer-rest-controller
      summary: allCustomer
      operationId: allCustomerUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/createcustomer:
    post:
      tags:
        - customer-rest-controller
      summary: createCustomer
      operationId: createCustomerUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: customer
          description: customer
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/api/deletecus/{customerId}':
    delete:
      tags:
        - customer-rest-controller
      summary: deleteCustomer
      operationId: deleteCustomerUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: customerId
          in: path
          description: customerId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  '/api/getCustomer/{customerId}':
    get:
      tags:
        - customer-rest-controller
      summary: getCustomer
      operationId: getCustomerUsingGET
      produces:
        - '*/*'
      parameters:
        - name: customerId
          in: path
          description: customerId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/api/getcustomer/{customerEmail}':
    get:
      tags:
        - customer-rest-controller
      summary: getCustomer
      operationId: getCustomerUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: customerEmail
          in: path
          description: customerEmail
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/updatecustomer:
    put:
      tags:
        - customer-rest-controller
      summary: updateCustomer
      operationId: updateCustomerUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: cus
          description: cus
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/createord/{customerId}':
    post:
      tags:
        - orders-rest-controller
      summary: createOrders
      operationId: createOrdersUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: customerId
          in: path
          description: customerId
          required: true
          type: integer
          format: int32
        - in: body
          name: orders
          description: orders
          required: true
          schema:
            $ref: '#/definitions/Orders'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Orders'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /createsupplierdetails:
    post:
      tags:
        - supplier-details-rest-controller
      summary: createSupplierDetails
      operationId: createSupplierDetailsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: supplierdetails
          description: supplierdetails
          required: true
          schema:
            $ref: '#/definitions/SupplierDetails'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SupplierDetails'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /delete:
    get:
      tags:
        - customer-controller
      summary: delete
      operationId: deleteUsingGET
      produces:
        - '*/*'
      parameters:
        - name: customerEmail
          in: query
          required: false
          type: string
        - name: customerId
          in: query
          required: false
          type: integer
          format: int32
        - name: customerName
          in: query
          required: false
          type: string
        - name: customerPassword
          in: query
          required: false
          type: string
        - name: customerPhoneno
          in: query
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/deleteord/{orderId}':
    delete:
      tags:
        - orders-rest-controller
      summary: deleteOrders
      operationId: deleteOrdersUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: orderId
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Orders'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  '/deletesupplier/{supplierId}':
    delete:
      tags:
        - supplier-details-rest-controller
      summary: deleteSupplierDetails
      operationId: deleteSupplierDetailsUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: supplierId
          in: path
          description: supplierId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SupplierDetails'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /edit:
    get:
      tags:
        - customer-controller
      summary: editcustomer
      operationId: editcustomerUsingGET
      produces:
        - '*/*'
      parameters:
        - name: customerEmail
          in: query
          required: false
          type: string
        - name: customerId
          in: query
          required: false
          type: integer
          format: int32
        - name: customerName
          in: query
          required: false
          type: string
        - name: customerPassword
          in: query
          required: false
          type: string
        - name: customerPhoneno
          in: query
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/getOrders/{orderId}':
    get:
      tags:
        - orders-rest-controller
      summary: getOrders
      operationId: getOrdersUsingGET
      produces:
        - '*/*'
      parameters:
        - name: orderId
          in: path
          description: orderId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Orders'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/getSupplierDetails/{supplierId}':
    get:
      tags:
        - supplier-details-rest-controller
      summary: getSupplierDetails
      operationId: getSupplierDetailsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: supplierId
          in: path
          description: supplierId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SupplierDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /inventory/allware:
    get:
      tags:
        - inventory-rest-controller
      summary: allWareHouse
      operationId: allWareHouseUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/WareHouse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /inventory/createinventory:
    post:
      tags:
        - inventory-rest-controller
      summary: createWareHouse
      operationId: createWareHouseUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: warehouse
          description: warehouse
          required: true
          schema:
            $ref: '#/definitions/WareHouse'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/WareHouse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
schemes:
-"http"
      deprecated: false
  '/inventory/deleteware/{inventoryId}':
    delete:
      tags:
        - inventory-rest-controller
      summary: deleteWareHouse
      operationId: deleteWareHouseUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: inventoryId
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/WareHouse'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  '/inventory/getWareHouse/{inventoryId}':
    get:
      tags:
        - inventory-rest-controller
      summary: getWareHouse
      operationId: getWareHouseUsingGET
      produces:
        - '*/*'
      parameters:
        - name: inventoryId
          in: path
          description: inventoryId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/WareHouse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /inventory/updatewarehouse:
    put:
      tags:
        - inventory-rest-controller
      summary: updateWareHouse
      operationId: updateWareHouseUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ware
          description: ware
          required: true
          schema:
            $ref: '#/definitions/WareHouse'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/WareHouse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /login:
    get:
      tags:
        - customer-controller
      summary: sigin
      operationId: siginUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /register:
    get:
      tags:
        - customer-controller
      summary: register
      operationId: registerUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - customer-controller
      summary: sigup
      operationId: sigupUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: customerPhoneno
          in: query
          description: customerPhoneno
          required: true
          type: integer
          format: int64
        - name: txtcustomerEmail
          in: query
          description: txtcustomerEmail
          required: true
          type: string
        - name: txtcustomerName
          in: query
          description: txtcustomerName
          required: true
          type: string
        - name: txtcustomerPassword
          in: query
          description: txtcustomerPassword
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /signin:
    get:
      tags:
        - customer-controller
      summary: signin
      operationId: signinUsingGET
      produces:
        - '*/*'
      parameters:
        - name: txtemail
          in: query
          description: txtemail
          required: true
          type: string
        - name: txtpassword
          in: query
          description: txtpassword
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /update:
    get:
      tags:
        - customer-controller
      summary: update
      operationId: updateUsingGET
      produces:
        - '*/*'
      parameters:
        - name: customerEmail
          in: query
          required: false
          type: string
        - name: customerId
          in: query
          required: false
          type: integer
          format: int32
        - name: customerName
          in: query
          required: false
          type: string
        - name: customerPassword
          in: query
          required: false
          type: string
        - name: customerPhoneno
          in: query
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /updateOrders:
    put:
      tags:
        - orders-rest-controller
      summary: updateOrders
      operationId: updateOrdersUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ord
          description: ord
          required: true
          schema:
            $ref: '#/definitions/Orders'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Orders'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /updatesupplier:
    put:
      tags:
        - supplier-details-rest-controller
      summary: updateSupplierDetails
      operationId: updateSupplierDetailsUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: supplierdetails
          description: supplierdetails
          required: true
          schema:
            $ref: '#/definitions/SupplierDetails'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SupplierDetails'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
definitions:
  Customer:
    type: object
    properties:
      customerEmail:
        type: string
      customerId:
        type: integer
        format: int32
      customerName:
        type: string
      customerPassword:
        type: string
      customerPhoneno:
        type: integer
        format: int64
    title: Customer
  ModelAndView:
    type: object
    properties:
      empty:
        type: boolean
      model:
        type: object
      modelMap:
        type: object
        additionalProperties:
          type: object
      reference:
        type: boolean
      status:
        type: string
        enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
      view:
        $ref: '#/definitions/View'
      viewName:
        type: string
    title: ModelAndView
  Orders:
    type: object
    properties:
      customer:
        $ref: '#/definitions/Customer'
      orderDate:
        type: string
      orderId:
        type: integer
        format: int32
      orderPrice:
        type: number
        format: double
      orderQuantity:
        type: integer
        format: int32
    title: Orders
  SupplierDetails:
    type: object
    properties:
      suppliedQuantity:
        type: integer
        format: int32
      supplierId:
        type: integer
        format: int32
      supplierName:
        type: string
    title: SupplierDetails
  View:
    type: object
    properties:
      contentType:
        type: string
    title: View
  WareHouse:
    type: object
    properties:
      dateOfrecord:
        type: string
      getdateOfrecord:
        type: string
      inventoryId:
        type: integer
        format: int32
      inventoryOnhand:
        type: integer
        format: int32
      inventoryReceived:
        type: integer
        format: int32
      inventoryShipped:
        type: integer
        format: int32
    title: WareHouse
